DECLARE
    rowa(0:10);
    rowb(0:10);
    rowc(0:10);
    rowd(0:10);
    rowe(0:10);
    rowf(0:10);
    rowg(0:10);
    row; dropping; prevpos;
    pos; drop; ite; turn; tmp;
IN

    rowa(0) := 1; 
    rowa(10) := 1;
    rowb(0) := 1; 
    rowb(10) := 1;
    rowc(0) := 1; 
    rowc(10) := 1;
    rowd(0) := 1; 
    rowd(10) := 1;
    rowe(0) := 1; 
    rowe(10) := 1;
    rowf(0) := 1; 
    rowf(10) := 1;
    rowg(0) := 1; 
    rowg(10) := 1;

    row := 1;
    FOR i FROM 1 TO 10 DO
        row := 10 * row;
        row := row + 1;
    ENDFOR
    WRITE row;

    row := 10000000000 * rowa(0); row := row + rowa(10); WRITE row; 
    row := 10000000000 * rowb(0); row := row + rowb(10); WRITE row; 
    row := 10000000000 * rowc(0); row := row + rowc(10); WRITE row; 
    row := 10000000000 * rowd(0); row := row + rowd(10); WRITE row; 
    row := 10000000000 * rowe(0); row := row + rowe(10); WRITE row; 
    row := 10000000000 * rowf(0); row := row + rowf(10); WRITE row; 
    row := 10000000000 * rowg(0); row := row + rowg(10); WRITE row; 

    row := 1;
    FOR i FROM 1 TO 10 DO
        row := 10 * row;
        row := row + 1;
    ENDFOR
    WRITE row;

    ite := 1;

    WHILE ite = 1 DO
        pos := 5;
        dropping := 1;
        drop := 0;
        READ turn;

        WHILE dropping = 1 DO
            prevpos := pos;
            IF drop = 0 THEN
                rowa(pos) := 5;
            ELSE
                READ turn;
                IF turn = 1 THEN
                    pos := pos - 1;
                    IF pos < 1 THEN
                        pos := 1;
                    ENDIF
                ENDIF
                IF turn = 3 THEN
                    pos := pos + 1;
                    IF pos > 9 THEN
                        pos := 9;
                    ENDIF
                ENDIF
            ENDIF
            IF drop = 1 THEN
                IF rowb(pos) != 0 THEN
                    dropping := 0;
                ELSE
                    rowb(pos) := rowa(prevpos);
                    rowa(prevpos) := 0;
                ENDIF
            ENDIF
            IF drop = 2 THEN
                IF rowc(pos) != 0 THEN
                    dropping := 0;
                ELSE
                    rowc(pos) := rowb(prevpos);
                    rowb(prevpos) := 0;
                ENDIF
            ENDIF
            IF drop = 3 THEN
                IF rowd(pos) != 0 THEN
                    dropping := 0;
                ELSE
                    rowd(pos) := rowc(prevpos);
                    rowc(prevpos) := 0;
                ENDIF
            ENDIF
            IF drop = 4 THEN
                IF rowe(pos) != 0 THEN
                    dropping := 0;
                ELSE
                    rowe(pos) := rowd(prevpos);
                    rowd(prevpos) := 0;
                ENDIF
            ENDIF
            IF drop = 5 THEN
                IF rowf(pos) != 0 THEN
                    dropping := 0;
                ELSE
                    rowf(pos) := rowe(prevpos);
                    rowe(prevpos) := 0;
                ENDIF
            ENDIF
            IF drop = 6 THEN
                IF rowg(pos) != 0 THEN
                    dropping := 0;
                ELSE
                    rowg(pos) := rowf(prevpos);
                    rowf(prevpos) := 0;
                    dropping := 0;
                ENDIF
            ENDIF

            IF rowg(1) = 5 THEN IF rowg(2) = 5 THEN IF rowg(3) = 5 THEN IF rowg(4) = 5 THEN 
            IF rowg(5) = 5 THEN IF rowg(6) = 5 THEN IF rowg(7) = 5 THEN IF rowg(8) = 5 THEN 
            IF rowg(9) = 5 THEN 
                FOR i FROM 1 TO 9 DO
                    rowg(i) := rowf(i);
                ENDFOR
                FOR i FROM 1 TO 9 DO
                    rowf(i) := rowe(i);
                ENDFOR
                FOR i FROM 1 TO 9 DO
                    rowe(i) := rowd(i);
                ENDFOR
                FOR i FROM 1 TO 9 DO
                    rowd(i) := rowc(i);
                ENDFOR
                FOR i FROM 1 TO 9 DO
                    rowc(i) := rowb(i);
                ENDFOR
                FOR i FROM 1 TO 9 DO
                    rowb(i) := rowa(i);
                ENDFOR
                FOR i FROM 1 TO 9 DO
                    rowa(i) := 0;
                ENDFOR
            ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF ENDIF
            
            row := 1;
            FOR i FROM 1 TO 10 DO
                row := 10 * row;
                row := row + 1;
            ENDFOR
            WRITE row;

            row := 0;
            FOR i FROM 0 TO 10 DO
                row := 10 * row;
                row := row + rowa(i);
            ENDFOR
            WRITE row;

            row := 0;
            FOR i FROM 0 TO 10 DO
                row := 10 * row;
                row := row + rowb(i);
            ENDFOR
            WRITE row;

            row := 0;
            FOR i FROM 0 TO 10 DO
                row := 10 * row;
                row := row + rowc(i);
            ENDFOR
            WRITE row;

            row := 0;
            FOR i FROM 0 TO 10 DO
                row := 10 * row;
                row := row + rowd(i);
            ENDFOR
            WRITE row;

            row := 0;
            FOR i FROM 0 TO 10 DO
                row := 10 * row;
                row := row + rowe(i);
            ENDFOR
            WRITE row;

            row := 0;   
            FOR i FROM 0 TO 10 DO
                row := 10 * row;
                row := row + rowf(i);
            ENDFOR
            WRITE row;

            row := 0;
            FOR i FROM 0 TO 10 DO
                row := 10 * row;
                row := row + rowg(i);
            ENDFOR
            WRITE row;

            row := 1;
            FOR i FROM 1 TO 10 DO
                row := 10 * row;
                row := row + 1;
            ENDFOR
            WRITE row;

            drop := drop + 1;
        ENDWHILE

        FOR i FROM 1 TO 9 DO
            IF rowa(i) != 0 THEN
                ite := 0;
                WRITE 888888888; WRITE 888888888; WRITE 888888888; WRITE 888888888; WRITE 888888888;
            ENDIF
        ENDFOR

    ENDWHILE

END
